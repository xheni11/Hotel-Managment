@model M19G1.Helpers.PaginatedList<M19G1.Models.UserViewModel>
@{
    ViewData["Title"] = "Index";
}
@Styles.Render("~/bundles/search")
<p>
    <h3>@TempData["Result"]</h3>
</p>
@Html.ActionLink("Add", "AddUpdateUser", new { id = 0 }, new { @class = "btn btn-dark rounded-0" })
<form class="example" asp-action="Index" method="get">
    <button type="submit" value="Search"><i class="fa fa-search"></i></button>
    <input type="text" placeholder="Search.." name="searchField" value="@ViewData["currentFilter"]" />

</form>
<div class="table-responsive">
    <table class="table  table-striped table-hover">
        <tr>
            <th scope="col">
                @Html.ActionLink("First Name", "Index", new { sortOrder = ViewBag.FirstNameSortParm })
            </th>
            <th scope="col">
                @Html.ActionLink("Last Name", "Index", new { sortOrder = ViewBag.LastNameSortParm })
            </th>
            <th scope="col">
                @Html.ActionLink("Email", "Index", new { sortOrder = ViewBag.EmailSortParm })
            </th>
            <th scope="col">
                @Html.ActionLink("Username", "Index", new { sortOrder = ViewBag.UsernameSortParm })
            </th>
            <th scope="col">
                Role
            </th>
            <th></th>
        </tr>
        @if (Model != null)
        {
            foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.FirstName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.LastName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Email)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.UserName)

                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Roles)

                    </td>
                    <td>
                        <a id="deleteItem" class="deleteItem btn btn-sm btn-danger fa fa-trash" data-target="#deleteModal"
                           data-toggle="modal"
                           data-path="@Url.Action("DeleteUser", "User", new { id = item.Id })"></a>
                        <a id="resetItem" class="resetItem btn btn-sm btn-primary fa fa-refresh" data-target="#resetModal"
                           data-toggle="modal"
                           data-path="@Url.Action("ResetPassword", "User", new { id = item.Id })"></a>
                        <a id="activateItem" class="activateItem btn btn-sm btn-dark fa fa-lock" data-target="#activateModal"
                           data-toggle="modal"
                           data-path="@Url.Action("UpdateUserActivity", "User", new { id = item.Id })"></a>
                        <a id="update" class="btn btn-sm btn-warning fa fa-pencil"
                           href="@Url.Action("AddUpdateUser", "User", new { id = item.Id })"></a>
                        @{
                            var active = item.Enabled ? "fa-lock" : "fa-unlock";
                        }
                        <script>        
                            var active = document.getElementById("activateItem");
                            active.classList.add("@active");
                        </script>
                        </td>
                </tr>
            }
        }

    </table>
</div>
@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";

}
<nav aria-label="Page navigation example">
    <ul class="pagination">
        <li class="page-item" id="previous">
            @Html.ActionLink("Previous", "Index", new { pageNumber = Model.PageIndex - 1 }, new { @class = "page-link" })
        </li>
        <li class="page-item" id="next">
            @Html.ActionLink("Next", "Index", new { pageNumber = Model.PageIndex + 1 }, new { @class = "page-link" })
        </li>
    </ul>
    <script>
        var previous = document.getElementById("previous");
        var next = document.getElementById("next");
        if ("@prevDisabled"!== "") {
            previous.classList.add("@prevDisabled");
        }
        if ("@nextDisabled"!== "") {
            next.classList.add("@nextDisabled");
            }

    </script>
</nav>


@Html.Partial("_ActivateModalPartial", new M19G1.Models.ModalModel { Message = "Are you sure you want to deactivate this user?", ModalId = "activateModal", ButtonId = "activateItem" })
@Html.Partial("_ResetModalPartial", new M19G1.Models.ModalModel { Message = "Are you sure you want to reset password for this user?", ModalId = "resetModal", ButtonId = "resetItem" })
@Html.Partial("_DeleteModalPartial", new M19G1.Models.ModalModel { Message = "Are you sure you want to delete this user?", ModalId = "deleteModal", ButtonId = "deleteItem" })